{"version":3,"sources":["scripts.js"],"names":["angular","module","config","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","global","MainController","$scope","transit","vm","hello","departureStop","arrivalStop","results","selectDeparture","selectArrival","ct","open","weekday","saturday","sunday","getDayOfWeek","date","Date","day","getDay","findbtn","a","d","console","log","err","error","departureResults","searchDepartureTimes","arrivalResults","searchArrivalTimes","setTimeout","length","findMatchingTripIds","selected","stack","departure","arrival","dep_time","arr_time","forEach","dep","arr","trip_id","indexOf","push","$apply","newVal","oldVal","stops","orderBy","toArray","then","names","uniqueNames","res","map","r","stop_name","$","each","i","el","inArray","$inject","factory","transitFactory","Dexie","gtfs","parseCSV","csv","lines","split","result","headers","obj","currentline","j","db","version","stores","on","calendar","count","Promise","all","resolve","reject","ajax","name","dataType","data","bulkPut","catch","getAllStopTimes","stop_times","departureTimes","where","startsWithAnyOfIgnoreCase","startsWithAnyOf","stop_id","arrivalTimes"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc overview\n * @name app\n * @description\n * # transit app\n *\n * Main module of the application.\n */\nangular\n  .module('app', [\n    'ngCookies',\n    'ngResource',\n    'ngRoute',\n    'ngSanitize',\n    'ngTouch'\n  ])\n  .config(function ($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'views/main.html',\n        controller: 'MainController',\n        controllerAs: 'vm'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  });\n\r\n'use strict';\n(function (global) {\n  /*\n    Methods for Controller\n  */\n  function MainController($scope, transit) {\n    var vm = $scope;\n\n    vm.hello = 'Hello World';\n    vm.departureStop = [];\n    vm.arrivalStop = [];\n    vm.results = {};\n    vm.selectDeparture = vm.departureStop[0];\n    vm.selectArrival = vm.arrivalStop[0];\n    var ct = transit;\n    ct.open();\n    var weekday = false;\n    var saturday = false;\n    var sunday = false;\n    getDayOfWeek();\n\n    function getDayOfWeek() {\n      var date = new Date();\n      var day = date.getDay();\n      if (day < 6) {\n        weekday = true;\n      } else {\n        if (day == 6) {\n          saturday = true;\n        } else {\n          sunday = true;\n        }\n      }\n    }\n    vm.findbtn = function (a, d) {\n      vm.selectDeparture = d;\n      vm.selectArrival = a;\n      console.log(d, a);\n      if (d === a) {\n        vm.results = [];\n        vm.err = true;\n        vm.error = 'The Departure and Arrival Stations must be different';\n        return;\n      } else {\n        // var results = ct.searchDepartureTimes(d)\n        var departureResults = ct.searchDepartureTimes(d)\n        var arrivalResults = ct.searchArrivalTimes(a)\n        setTimeout(function () {\n          if (departureResults.length > 0 && arrivalResults.length > 0) {\n            findMatchingTripIds(departureResults, arrivalResults)\n          }\n        }, 1000)\n        vm.selected = true;\n        vm.err = false;\n        if (!departureResults) {\n          console.log(err.stack)\n          return err;\n        }\n      };\n    }\n\n    function findMatchingTripIds(departure, arrival) {\n      var dep_time = [];\n      var arr_time = [];\n      departure.forEach(function (dep) {\n        arrival.forEach(function (arr) {\n          if ((dep.trip_id) == (arr.trip_id)) {\n            if (weekday == true) {\n              if (dep.trip_id.indexOf('a') == -1 && dep.trip_id.indexOf('u') == -1) {\n                dep_time.push(dep)\n              }\n            } else {\n              if (saturday == true) {\n                if (dep.trip_id.indexOf('a') !== -1) {\n                  dep_time.push(dep)\n                }\n              } else {\n                dep_time.push(dep)\n              }\n            }\n          }\n          if ((arr.trip_id) == (dep.trip_id)) {\n            if (weekday == true) {\n              if (arr.trip_id.indexOf('a') == -1 && arr.trip_id.indexOf('u') == -1) {\n                arr_time.push(arr)\n              }\n            } else {\n              if (saturday == true) {\n                if (arr.trip_id.indexOf('a') !== -1) {\n                  arr_time.push(arr)\n                }\n              } else {\n                arr_time.push(arr)\n              }\n            }\n          }\n        })\n      })\n      vm.results.departure = dep_time\n      vm.results.arrival = arr_time\n      $scope.$apply('results', function (newVal, oldVal) {\n        vm.results = newVal;\n      });\n      console.log(vm.results)\n    }\n\n\n    // Get Station Names \n    ct.stops\n      .orderBy('stop_name')\n      .toArray()\n      .then(res => {\n        let names = [];\n        let uniqueNames = [];\n        res.map(r => {\n          names.push(r.stop_name);\n          $.each(names, function (i, el) {\n            if ($.inArray(el, uniqueNames) === -1) uniqueNames.push(el);\n          });\n        });\n        vm.arrivalStop = uniqueNames;\n        vm.departureStop = uniqueNames;\n      });\n\n\n\n\n\n\n  }\n  /*\n  Bind Controller to the View\n  */\n  angular\n    .module('app')\n    .controller('MainController', MainController);\n  MainController.$inject = ['$scope', 'transitFactory'];\n})(this);\n\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .factory('transitFactory', transitFactory);\r\n  function transitFactory() {\r\n\r\n    var transit = new Dexie('gtfs');\r\n\r\n\r\n    var gtfs = [\r\n      'calendar',\r\n      'calendar_dates',\r\n      'stop_times',\r\n      'stops',\r\n      'trips'\r\n    ];\r\n\r\n\r\n\r\n    function parseCSV(csv) {\r\n      var lines = csv.split(\"\\n\");\r\n      var result = [];\r\n      var headers = lines[0].split(\",\");\r\n      for (var i = 1; i < lines.length; i++) {\r\n        var obj = {};\r\n        var currentline = lines[i].split(\",\");\r\n        for (var j = 0; j < headers.length; j++) {\r\n          obj[headers[j]] = currentline[j];\r\n        }\r\n        result.push(obj);\r\n      }\r\n      return result; // No need to make it JSON\r\n    }\r\n\r\n\r\n\r\n    var db = transit;\r\n\r\n    db.version(1).stores({\r\n      'calendar': \"++id,service_id,monday,tuesday,wednesday,thursday,friday,saturday,sunday,start_date,end_date\",\r\n      'calendar_dates': \"++id,service_id,date,exception_type\",\r\n      'stop_times': \"++id,trip_id,arrival_time,departure_time,stop_id,stop_sequence,pickup_type,drop_off_type\",\r\n      'stops': \"++id,stop_id,stop_code,stop_name,stop_lat,stop_lon,zone_id,stop_url,location_type,parent_station,platform_code,wheelchair_boarding\",\r\n      'trips': \"++id,route_id,service_id,trip_id,trip_headsign,trip_short_name,direction_id,shape_id,wheelchair_accessible,bikes_allowed\"\r\n    });\r\n\r\n    // Populate from AJAX:\r\n    db.on('ready', function () {\r\n      return db.calendar.count(function (count) {\r\n        if (count > 0) {\r\n          console.log(\"Already populated, 'gtfs' is already created at this domain.\");\r\n        } else {\r\n          console.log(\"Database is empty. Populating from ajax call...\");\r\n          return Dexie.Promise.all(gtfs.map(name => new Dexie.Promise((resolve, reject) => {\r\n            $.ajax('gtfs/' + name + '.txt', {\r\n              dataType: 'text'\r\n            }).then(resolve, reject);\r\n          }).then(data => {\r\n            console.log(\"Got ajax response for \" + name);\r\n            return parseCSV(data);\r\n          }).then(res => {\r\n            console.log(\"Bulk putting \" + res.length + \" \" + name + \" records into database\");\r\n            return db[name].bulkPut(res);\r\n          }).then(() => {\r\n            console.log(\"Done importing \" + name);\r\n          }))).then(() => {\r\n            console.log(\"All files successfully imported\");\r\n          }).catch(err => {\r\n            console.error(\"Error importing data: \" + (err.stack || err));\r\n            throw err;\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n\r\n\r\n\r\n    db.getAllStopTimes = function () {\r\n      var arr = [];\r\n      db.stop_times.orderBy('id').toArray()\r\n        .then(res => {\r\n          return arr.push(res);\r\n        }).then(() => {\r\n          console.log(arr)\r\n        }).catch(err => {\r\n          console.log(\"Exception thrown: \" + (err.stack || err));\r\n          throw err;\r\n        })\r\n      return arr;\r\n    }\r\n\r\n    db.searchDepartureTimes = function (departure) {\r\n      var departureTimes = [];\r\n      db.stops.where(\"stop_name\").startsWithAnyOfIgnoreCase(departure).toArray().then(res => {\r\n        res.forEach(r => {\r\n          db.stop_times.where(\"stop_id\").startsWithAnyOf(r.stop_id).toArray().then(res => {\r\n            res.map(r => {\r\n              departureTimes.push(r)\r\n            })\r\n          })\r\n        })\r\n      }).then(() => {\r\n        console.log(departureTimes);\r\n      }).catch(err => {\r\n        console.log(err.stack);\r\n        return err;\r\n      })\r\n      return departureTimes;\r\n    }\r\n\r\n    db.searchArrivalTimes = function (arrival) {\r\n      var arrivalTimes = [];\r\n      db.stops.where(\"stop_name\").startsWithAnyOfIgnoreCase(arrival).toArray().then(res => {\r\n        res.forEach(r => {\r\n          db.stop_times.where(\"stop_id\").startsWithAnyOf(r.stop_id).toArray().then(res => {\r\n            res.map(r => {\r\n              arrivalTimes.push(r)\r\n            })\r\n          })\r\n        })\r\n      }).then(() => {\r\n        // console.log(arrivalTimes.length);\r\n      }).catch(err => {\r\n        console.log(err.stack);\r\n        return err;\r\n      })\r\n      return arrivalTimes;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return transit;\r\n\r\n  }\r\n})();\r\n\r\n\n//# sourceMappingURL=scripts.js.map"]}